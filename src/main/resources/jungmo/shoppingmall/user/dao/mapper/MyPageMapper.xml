<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="jungmo.shoppingmall.user.mypage.dao.mapper.MyPageMapper">
	<select id = "getReason" resultType = "reason">
		select rea_code reaCode,rea_name reaName
		from reasons
	</select>
	
	<select id = "getRefund" parameterType = "string" resultType = "re">
		select ord_num ordNum,ref_requestdate reDate,ref_reason reReason,rea_name reaName,ref_content reContent,ref_state reState
		from refunds
	    join reasons
	    on (refunds.ref_reason = reasons.rea_code)
		where ord_num = #{ordNum}
	</select>
	
	<select id = "getExchange" parameterType = "string" resultType = "re">
		select ord_num ordNum,exc_requestdate reDate,exc_reason reaReason,rea_name reaName,exc_content reContent,exc_state reState
		from exchanges
	    join reasons
	    on (exchanges.exc_reason = reasons.rea_code)
		where ord_num = #{ordNum}
	</select>
	
	<select id = "getRefundImage" parameterType = "string" resultType = "imgl">
		select  ref_imageurl imageUrl,ref_num excNum
		from refund_images
		where ord_num = #{ordNum}
	</select>
	
	<select id = "getExchangeImage" parameterType = "string" resultType = "imgl">
		select  exc_imageurl imageUrl,exc_num excNum
		from exchange_images
		where ord_num = #{ordNum}
	</select>
	
	<select id = "getCart" parameterType = "string" resultMap = "cartMap">
		select cart_num,user_id,carts.god_num,god_name,godc_name,god_listimageurl,god_sellingprice,cart_amount,opt_name,opt_content,opt_price,opt_num
		from carts
	    join goods
	   	on(carts.god_num = goods.god_num)
      	join goods_categories
      	on(goods.godc_num = goods_categories.godc_num)
		where user_id = #{userId}
		order by cart_num
	</select>
	
	<select id = "getPl" parameterType = "upage" resultType = "polg">
		  select * from(
		  	select rownum as rnum, x.* from(
	            select user_id userid,polg_date polgDate, polg_content polgContent,polg_change polgChange
	            from point_logs
	            where user_id = #{userId}          
		  		order by polg_date
		  		<![CDATA[
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
		  	]]>	
	</select>
	
	<select id = "getSearchPl" parameterType = "upage" resultType = "polg">
		 <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
	            select user_id userid,polg_date polgDate, polg_content polgContent,polg_change polgChange
	            from point_logs
	            where user_id = #{userId} and
        		polg_date > to_date(#{sdate},'YYYY-MM-DD HH24:MI:SS') and
				polg_date < to_date(#{edate},'YYYY-MM-DD HH24:MI:SS')
		  		order by polg_date
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
		  	]]>
	</select>
	
	<select id = "getMOtoq" parameterType = "upage" resultMap = "OtoqMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
		  		select otoq_num,oto_questions.otoc_num,otoc_name,otoq_title,otoq_content,user_id,otoq_writingdate
		  		from oto_questions
		  		join oto_categories
		  		on (oto_questions.otoc_num = oto_categories.otoc_num)
		  		where user_id = #{userId}
		  		order by otoq_num desc
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	 
	<select id = "getMOtoqSearch" parameterType = "upage" resultMap = "OtoqMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
		  		select otoq_num,oto_questions.otoc_num,otoc_name,otoq_title,otoq_content,user_id,otoq_writingdate
		  		from oto_questions
		  		join oto_categories
		  		on (oto_questions.otoc_num = oto_categories.otoc_num)
				where (otoq_content like '%' || #{otoqContent} || '%') or (otoq_title like '%' || #{otoqContent} || '%')
				and user_id = #{userId}
		  		order by oto_questions.otoq_num desc
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	
	<select id = "getMOtoa" parameterType = "int" resultType = "otoa">
		select otoq_num otoqNum,otoa_content otoaContent,user_id userId,otoa_writingdate otoaWritingDate
		from oto_anser
		where otoq_num = #{otoqNum}
	</select>
	
	<select id = "getOtoc" resultType = "otoc">
		select otoc_num otocNum,otoc_name otocName
		from oto_categories
	</select>
	
	<select id = "getMGodr" parameterType = "upage" resultMap = "godrMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
				select godr_num,goods_reviews.god_num,god_name,godc_name,god_listimageurl,user_id,godr_writingdate,satislevel,godr_content
				from goods_reviews
				join goods
				on (goods_reviews.god_num = goods.god_num)
				join goods_categories
				on (goods.godc_num = goods_categories.godc_num)
        		where user_id = #{userId}
		  		order by godr_num desc
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	
	<insert id = "addRefund" parameterType = "re">
		insert into refunds
		values(#{ordNum},sysdate,#{reReason},#{reContent},'처리전',null,null,#{rePayNum})
	</insert>
	
	<insert id = "addExchange" parameterType = "re">
		insert into exchanges
		values(#{ordNum},sysdate,#{reReason},#{reContent},'처리전',null,null,#{rePayNum})
	</insert>
	
	<insert id = "addRefundImage" parameterType = "reai">
		insert all
		<foreach item = "rea" collection = "reaList" index = "index">
			into refund_images
			values(#{rea.imageUrl},#{ordNum},#{index}+1)
		</foreach>
		select 1 from dual
	</insert>
	 
	<insert id = "addOtoq" parameterType = "otoq">
		insert into oto_questions
		values(oto_seq.nextval,#{otocNum},#{otoqTitle},#{otoqContent},#{userId},sysdate)
	</insert>
	
	<update id = "modifyCartAmount" parameterType = "map">
		update carts
		set cart_amount = #{cartAmount}
		where cart_num = #{cartNum}
	</update>
	
	<update id = "modifyOtoq" parameterType = "otoq">
		update oto_questions
		set otoc_num = #{otocNum},otoq_title = #{otoqTitle},otoq_content = #{otoqContent}
		where otoq_num = #{otoqNum}
	</update>
	
	<delete id = "deleteCart" parameterType = "map">
		delete from carts
		where cart_num in
		<foreach item = "ls" collection = "list" index = "index" open="(" separator="," close=")">
			#{ls}
		</foreach>
	</delete>
	
	<delete id = "deleteRefund" parameterType = "string">
		delete from refunds
		where ord_num = #{ordNum}
	</delete>
	
	<delete id = "deleteExchange" parameterType = "string">
		delete from exchanges
		where ord_num = #{ordNum}
	</delete>
	
	<insert id = "addExchangeImage" parameterType = "reai">
		insert all
		<foreach item = "rea" collection = "reaList" index = "index">
			into exchange_images
			values(#{rea.imageUrl},#{ordNum},#{index}+1)
		</foreach>
		select 1 from dual
	</insert>
	 
	<resultMap id = "cartMap" type = "cart">
		<id property = "cartNum" column = "cart_num" />
		<result property = "userId" column = "user_id" />
		<result property = "godNum" column = "god_num" />
		<result property = "godSellingPrice" column = "god_sellingprice" />
		<result property = "godName" column = "god_name" />
		<result property = "godcName" column = "godc_name" />
		<result property = "godListImageUrl" column = "god_listimageurl" />
		<result property = "godAmount" column = "cart_amount" />
		<result property = "optName" column = "opt_name" />
		<result property = "optContent" column = "opt_content" />
		<result property = "optPrice" column = "opt_price" />
		<result property = "optNum" column = "opt_num" />
	</resultMap>
	
	<resultMap id = "OtoqMap" type = "otoq">
	 	<id property = "otoqNum" column = "otoq_num" />
	 	<result property = "otocNum" column = "otoc_num" />
	 	<result property = "otocName" column = "otoc_name" />
	 	<result property = "otoqTitle" column = "otoq_title" />
	 	<result property = "otoqContent" column = "otoq_content" />
	 	<result property = "otoqWritingDate" column = "otoq_writingdate" />
	 	<result property = "userId" column = "user_id" />
	 	<association property="otoa" column="otoq_num" select = "getMOtoa" />
	</resultMap>
	
	<resultMap id = "godrMap" type = "godr">
		<id property = "godrNum" column = "godr_num" />
		<result property = "godNum" column = "god_num" />
		<result property = "godName" column = "god_name" />
		<result property = "godcName" column = "godc_name" />
		<result property = "godListImageUrl" column = "god_listimageurl" />
		<result property = "userId" column = "user_id" />
		<result property = "godrWritingDate" column = "godr_writingdate" />
		<result property = "satisLevel" column = "satislevel" />
		<result property = "godrContent" column = "godr_content" />
	</resultMap>
</mapper>