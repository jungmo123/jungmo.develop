<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="jungmo.shoppingmall.admin.order.dao.mapper.PostMapper">
	<select id = "getPosts" parameterType = "page" resultMap = "purListMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
		          select ord_num,usingpoint,ord_type,ord_date,orders.user_id,user_name
		          from orders
		          join users
		          on (orders.user_id = users.user_id)
		   ]]>
		   		<where>
		   			<if test = "type != null and type.equals('All')">
		   				ord_type != '주문취소' and ord_type != '환불' and ord_type != '교환'
		   			</if>
		   			<if test = "type != null and type.equals('One')">
		   				ord_type = '배송준비중'
		   			</if>
		   			<if test = "type != null and type.equals('Two')">
		   				ord_type = '배송중'
		   			</if>
		   			<if test = "type != null and type.equals('Three')">
		   				ord_type = '배송완료'
		   			</if>
		   			<if test = "type != null and type.equals('Four')">
		   				ord_type = '주문취소'
		   			</if>
		   		</where>
		   <![CDATA[
		  		order by ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	
	<select id = "getCancelPosts" parameterType = "page" resultMap = "ocMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
				select order_cancels.ord_num,ord_date,odc_date,USINGPOINT,odc_type,PAYMENTMETHOD,users.user_id
				from order_cancels
				join orders
				on (order_cancels.ord_num = orders.ord_num)
				join users
				on (orders.user_id = users.user_id)
		   ]]>
		   		<where>
		   			<if test = "type != null and type.equals('One')">
		   				odc_type = '처리전'
		   			</if>
		   			<if test = "type != null and type.equals('Two')">
		   				odc_type = '처리완료'
		   			</if>
		   		</where>
		   <![CDATA[
		  		order by ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>

	<select id = "getRefundPosts" parameterType = "page" resultMap = "refMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
				select refunds.ord_num,ref_requestdate,ref_reason,rea_name,ref_content,ref_completeDate,ref_memo,users.user_id,user_name,user_phone,ref_state
				from refunds
				join orders
				on (refunds.ord_num = orders.ord_num)
				join users
				on (orders.user_id = users.user_id)
				join reasons
				on (refunds.ref_reason = reasons.rea_code)
		   ]]>
		   		<where>
		   			<if test = "type != null and type.equals('One')">
		   				ref_state = '처리전'
		   			</if>
		   			<if test = "type != null and type.equals('Two')">
		   				ref_state = '처리완료'
		   			</if>
		   		</where>
		   <![CDATA[
		  		order by ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	
	<select id = "getExchangePosts" parameterType = "page" resultMap = "excMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
				select exchanges.ord_num,exc_requestdate,exc_reason,rea_name,exc_content,exc_completeDate,exc_memo,users.user_id,user_name,user_phone,exc_state
				from exchanges
				join orders
				on (exchanges.ord_num = orders.ord_num)
				join users
				on (orders.user_id = users.user_id)
				join reasons
				on (exchanges.exc_reason = reasons.rea_code)
		   ]]>
		   		<where>
		   			<if test = "type != null and type.equals('One')">
		   				exc_state = '처리전'
		   			</if>
		   			<if test = "type != null and type.equals('Two')">
		   				exc_state = '처리완료'
		   			</if>
		   		</where>
		   <![CDATA[
		  		order by exchanges.ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>

	<select id = "getDatePosts" parameterType = "page" resultMap = "purListMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
		        select ord_num,usingpoint,ord_type,ord_date,orders.user_id,user_name
		        from orders
		        join users
		        on (orders.user_id = users.user_id)
				where ord_date > #{date1} and
				ord_date < #{date2} and
				ord_num like '%' || #{ordNum} || '%'
				and ord_type != '교환' and ord_type != '환불' and ord_type != '주문취소'
		  		order by ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	
	<select id = "getCancelDatePosts" parameterType = "page" resultMap = "ocMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
				select order_cancels.ord_num,ord_date,odc_date,USINGPOINT,odc_type,PAYMENTMETHOD,users.user_id
				from order_cancels
				join orders
				on (order_cancels.ord_num = orders.ord_num)
				join users
				on (orders.user_id = users.user_id)
				where odc_date > #{date1} and
				odc_date < #{date2} and
				order_cancels.ord_num like '%' || #{ordNum} || '%'
		  		order by order_cancels.ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	 
	<select id = "getRefundDatePosts" parameterType = "page" resultMap = "refMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
				select refunds.ord_num,ref_requestdate,ref_reason,rea_name,ref_content,ref_completeDate,ref_memo,users.user_id,user_name,user_phone,ref_state
				from refunds
				join orders
				on (refunds.ord_num = orders.ord_num)
				join users
				on (orders.user_id = users.user_id)
				join reasons
				on (refunds.ref_reason = reasons.rea_code)
				where ref_requestdate > #{date1} and
				ref_requestdate < #{date2} and
				refunds.ord_num like '%' || #{ordNum} || '%'
		  		order by refunds.ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	
	<select id = "getExchangeDatePosts" parameterType = "page" resultMap = "excMap">
		  <![CDATA[
		  select * from(
		  	select rownum as rnum, x.* from(
				select exchanges.ord_num,exc_requestdate,exc_reason,rea_name,exc_content,exc_completeDate,exc_memo,users.user_id,user_name,user_phone,exc_state
				from exchanges
				join orders
				on (exchanges.ord_num = orders.ord_num)
				join users
				on (orders.user_id = users.user_id)
				join reasons
				on (exchanges.exc_reason = reasons.rea_code)
				where exc_requestdate > #{date1} and
				exc_requestdate < #{date2} and
				exchanges.ord_num like '%' || #{ordNum} || '%'
		  		order by exchanges.ord_num
		  		)x where rownum <= #{rowCnt}*#{currentPage}
		  	)where rnum > #{rowCnt}*(#{currentPage}-1)
			]]>
	</select>
	
	<select id = "getGodList" resultMap = "godListMap">
		select purchases.god_num,ord_num,pur_num,god_name,god_sellingprice,god_amount
		from purchases join goods
		on (purchases.god_num = goods.god_num)
		where ord_num = #{ordNum}
	</select>
	
	<select id = "getGodo" parameterType = "map" resultMap = "godoMap">
		select ord_num,god_num,pur_num,opt_name,opt_content,opt_price
		from purchase_option
		where ord_num = #{ordNum} and pur_num = #{purNum} and god_num = #{godNum}
		order by ord_num
	</select>
	
	<select id = "getRefundImage" parameterType = "string" resultType = "refi">
		select ord_num ordNum,ref_imageurl refundImageUrl
		from refund_images
		where ord_num = #{ordNum}
	</select>
	
	<select id = "getExchangeImage" parameterType = "string" resultType = "exci">
		select ord_num ordNum,exc_imageurl exchangeImageUrl
		from exchange_images
		where ord_num = #{ordNum}
	</select>
	
	<resultMap id = "purListMap" type = "purlist">
		<id property = "ordNum" column = "ord_num" />
		<result property = "usingPoint" column = "usingpoint" />
		<result property = "ordType" column = "ord_type" />
		<result property = "ordDate" column = "ord_date" />
		<result property = "userId" column = "user_id" /> 
		<result property = "userName" column = "user_name" />
		<collection property = "goods" column = "{ordNum=ord_num}" select="getGodList" />
	</resultMap>
	
	<resultMap id = "godListMap" type = "godl">
		<id property = "godNum" column = "god_num" />
		<id property = "ordNum" column = "ord_num" />
		<result property = "purNum" column = "pur_num" />
		<result property = "godName" column = "god_name" />
		<result property = "godAmount" column = "god_amount" />
		<result property = "godSellingPrice" column = "god_sellingprice" />
		<result property = 'godListImageUrl' column = "god_listimageurl" />	
	</resultMap>
	
	<resultMap id = "godoMap" type = "godo">
		<result property = "ordNum" column = "ord_num" />
		<result property = "purNum" column = "pur_num" />
		<result property = "godNum" column = "god_num" />
		<result property = "optName" column = "opt_name" />
		<result property = "optContent" column = "opt_content" />
		<result property = "optPrice" column = "opt_price" />
	</resultMap>

	<resultMap id = "ocMap" type = "oc">
		<result property = "ordNum" column = "ord_num" />
		<result property = "ordDate" column = "ord_date" />
		<result property = "odcDate" column = "odc_date" />
		<result property = "odcType" column = "odc_type" />
		<result property = "usingPoint" column = "usingpoint" />
		<result property = "paymentMethod" column = "paymentmethod" />
		<association property="user" resultMap = "getUser" />
		<collection property = "goods" column = "{ordNum=ord_num}" select="getGodList" />
	</resultMap> 
	
	<resultMap id = "getUser" type = "user">
		<result property = "userId" column = "user_id" />
		<result property = "userName" column = "user_name" />
		<result property = "userPhone" column = "user_phone" />
	</resultMap>
	
	<resultMap id = "refMap" type = "ref">
		<result property = "ordNum" column = "ord_num" />
		<result property = "refRequestDate" column = "ref_requestdate" />
		<result property = "refReason" column = "ref_reason" />
		<result property = "reaName" column = "rea_name" />
		<result property = "refContent" column = "ref_content" />
		<result property = "refState" column = "ref_state" />
		<result property = "refMemo" column = "ref_memo" />
		<result property = "refCompleteDate" column = "ref_completedate" />
		<association property="user" resultMap = "getUser" />
		<collection property = "goods" column = "{ordNum=ord_num}" select="getGodList" />
		<collection property = "images" column = "ord_num" select = "getRefundImage" />
	</resultMap>
	
	<resultMap id = "excMap" type = "exc">
		<result property = "ordNum" column = "ord_num" />
		<result property = "excRequestDate" column = "exc_requestdate" />
		<result property = "excReason" column = "exc_reason" />
		<result property = "reaName" column = "rea_name" />
		<result property = "excContent" column = "exc_content" />
		<result property = "excState" column = "exc_state" />
		<result property = "excMemo" column = "exc_memo" />
		<result property = "excCompleteDate" column = "exc_completedate" />
		<association property="user" resultMap = "getUser" />
		<collection property = "goods" column = "{ordNum=ord_num}" select="getGodList" />
		<collection property = "images" column = "ord_num" select = "getExchangeImage" />
	</resultMap>
</mapper>