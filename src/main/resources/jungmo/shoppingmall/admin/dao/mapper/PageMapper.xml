<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="jungmo.shoppingmall.admin.order.dao.mapper.PageMapper">
	<select id = "getTotRowCnt" parameterType="string" resultType = "int">
		select count(distinct ord_num)
		from orders
		<where>
			<if test = "_parameter != null and _parameter.equals('All')">
				ord_type != '주문취소' and ord_type != '환불' and ord_type != '교환'
			</if>
			<if test = "_parameter != null and _parameter.equals('One')">
				ord_type = '배송준비중'
			</if>
			<if test = "_parameter != null and _parameter.equals('Two')">
				ord_type = '배송중'
			</if>
			<if test = "_parameter != null and _parameter.equals('Three')">
				ord_type = '배송완료'
			</if>
			<if test = "_parameter != null and _parameter.equals('Four')">
				ord_type = '주문취소'
			</if>
		</where>
	</select>
	
	<select id = "getCancelTotRowCnt" parameterType="string" resultType = "int">
		select count(distinct ord_num)
		from order_cancels
		<where>
			<if test = "_parameter != null and _parameter.equals('One')">
				odc_type = '처리전'
			</if>
			<if test = "_parameter != null and _parameter.equals('Two')">
				odc_type = '처리완료'
			</if>
		</where>
	</select>
	 
	<select id = "getRefundTotRowCnt" parameterType="string" resultType = "int">
		select count(distinct ord_num)
		from refunds
		<where>
			<if test = "_parameter != null and _parameter.equals('One')">
				ref_state = '처리전'
			</if>
			<if test = "_parameter != null and _parameter.equals('Two')">
				ref_state = '처리완료'
			</if>
		</where>
	</select>
	
	<select id = "getExchangeTotRowCnt" parameterType="string" resultType = "int">
		select count(distinct ord_num)
		from exchanges
		<where>
			<if test = "_parameter != null and _parameter.equals('One')">
				exc_state = '처리전'
			</if>
			<if test = "_parameter != null and _parameter.equals('Two')">
				exc_state = '처리완료'
			</if>
		</where>
	</select>
 
	<select id = "getBoardTotRowCnt" parameterType="map" resultType = "int">
		select count(pos_num)
		from posts
		where bor_num = #{borNum}
		<if test = "poscNum != 0">
			and posc_num = #{poscNum}
		</if>
	</select>
	 
	<select id = "getBoardSearchTotRowCnt" parameterType="map" resultType = "int">
		select count(pos_num)
		from posts
		where bor_num = #{borNum}
		<if test = "poscNum != 0">
			and posc_num = #{poscNum}
		</if>
     	 <if test = "searchType == 1">
     	 	<if test = "searchContent !=  ''">
				 and (pos_title like '%' || #{searchContent} || '%' or pos_content like '%' || #{searchContent} || '%')    	 	
     	 	</if>
    	 </if> 
	</select>
	
	<select id = "getBorcTotRowCnt"  resultType = "int">
		select count(borc_num)
		from board_categories
		where bor_num = #{borNum}
	</select>
	
	<select id = "getGodqTotRowCnt"  resultType = "int">
		select count(godq_num)
		from goods_questions
	</select> 
	
	<select id = "getGodqSearchTotRowCnt"  parameterType="map" resultType = "int">
		<if test = "godqType != 'on'">
			select count(godq_num)
			from goods_questions
			where godq_content like '%' || #{godqContent} || '%'
		</if>
		<if test = "godqType == 'on'">
		select count(goods_questions.godq_num)
		from goods_questions
     	where not exists(select * from goods_anser where goods_questions.godq_num = goods_anser.godq_num) and godq_content like '%' || #{godqContent} || '%'	
		</if>
	</select>
	 
	<select id = "getOtoqTotRowCnt"  resultType = "int">
		select count(otoq_num)
		from oto_questions
	</select> 
 
	<select id = "getOtoqSearchTotRowCnt"  parameterType="map" resultType = "int">
		<if test = "otoqType != 'on'">
			select count(otoq_num)
		  	from oto_questions
			where (otoq_content like '%' || #{otoqContent} || '%') or (otoq_title like '%' || #{otoqContent} || '%')
		</if>
		<if test = "otoqType == 'on'">
			select count(otoq_num)
			from oto_questions
      		where not exists(select * from oto_anser where oto_questions.otoq_num = oto_anser.otoq_num)
       		and ((otoq_content like '%' || #{otoqContent} || '%') or (otoq_title like '%' || #{otoqContent} || '%'))
		</if>
	</select>
	 
	<select id = "getGodrTotRowCnt" resultType = "int">
		select count(godr_num)
		from goods_reviews
	</select>
 
	<select id = "getGodrSearchTotRowCnt"  parameterType="map" resultType = "int">
		<if test = "godcNum == 0">
			select count(godr_num)
		  	from goods_reviews
			where (godr_content like '%' || #{godrContent} || '%')
		</if>
		<if test = "godcNum != 0">
			select count(godr_num)
		  	from goods_reviews
		  	join goods
		  	on (goods_reviews.god_num = goods.god_num)
			where (godr_content like '%' || #{godrContent} || '%') and (goods.godc_num = #{godcNum})
		</if>
	</select>
	 
	<select id = "getEventTotRowCnt" resultType = "int">
		select count(event_num)
		from events
	</select>
	
	<select id = "getEventSearchTotRowCnt"  parameterType="string" resultType = "int">
		select count(event_num)
		from events
		where (event_content like '%' || #{eventContent} || '%') or (event_title like '%' || #{eventContent} || '%')
	</select>
	
	<select id = "getDateTotRowCnt" parameterType= "page" resultType = "int">
	<![CDATA[	
	select count(distinct ord_num)
		from orders
		where ord_date > #{date1} and
		ord_date < #{date2} and
		ord_num like '%' || #{ordNum} || '%'
		and ord_type != '교환' and ord_type != '환불' and ord_type != '주문취소'
		order by ord_num
	]]>
	</select>
	
	<select id = "getCancelDateTotRowCnt" parameterType= "page" resultType = "int">
	<![CDATA[	
	select count(distinct ord_num)
		from order_cancels
		where odc_date > #{date1} and
		odc_date < #{date2} and
		ord_num like '%' || #{ordNum} || '%'
		order by ord_num
	]]>
	</select>
	
	<select id = "getRefundDateTotRowCnt" parameterType= "page" resultType = "int">
	<![CDATA[	
	select count(distinct ord_num)
		from refunds
		where ref_requestdate > #{date1} and
		ref_requestdate < #{date2} and
		ord_num like '%' || #{ordNum} || '%'
		order by ord_num
	]]>
	</select>
	 
	<select id = "getExchangeDateTotRowCnt" parameterType= "page" resultType = "int">
	<![CDATA[	
	select count(distinct ord_num)
		from exchanges
		where exc_requestdate > #{date1} and
		exc_requestdate < #{date2} and
		ord_num like '%' || #{ordNum} || '%'
		order by ord_num
	]]>
	</select>
</mapper>