<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="jungmo.shoppingmall.admin.order.dao.mapper.OrderMapper">
	<select id = "getOrders" resultMap = "purMap">
      select purchases.ord_num,purchases.god_num,ord_type,ord_date,god_amount,god_name,USINGPOINT,god_sellingprice,users.user_id,user_name
      from purchases join goods
      on (purchases.god_num = goods.god_num)
      join orders
      on (purchases.ord_num = orders.ord_num)
      join users
      on (orders.user_id = users.user_id)
      where ord_type != '주문취소' and ord_type != '환불' and ord_type != '교환'
      order by purchases.ord_num
	</select>
	
	<select id = "getOrderCancels" resultMap = "ocMap">
		select order_cancels.ord_num,purchases.god_num,ord_date,ord_date,odc_date,USINGPOINT,odc_type,PAYMENTMETHOD,users.user_id
		from order_cancels join purchases
		on (order_cancels.ord_num = purchases.ord_num)
		join orders
		on (order_cancels.ord_num = orders.ord_num)
		join users
		on (orders.user_id = users.user_id)
	</select> 
	 
	<select id = "getOrderRefund" resultMap = "refMap">
		select refunds.ord_num,purchases.god_num,ref_requestdate,ref_reason,rea_name,ref_content,ref_completeDate,ref_memo,users.user_id,user_name,user_phone,ref_state
		from refunds join purchases
		on (refunds.ord_num = purchases.ord_num)
		join orders
		on (refunds.ord_num = orders.ord_num)
		join users
		on (orders.user_id = users.user_id)
		join reasons
		on (refunds.ref_reason = reasons.rea_code)
	</select>
	
	<select id = "getOrderExchange" resultMap = "excMap">
		select exchanges.ord_num,purchases.god_num,exc_requestdate,exc_reason,rea_name,exc_content,exc_completeDate,exc_memo,users.user_id,user_name,user_phone,exc_state
		from exchanges join purchases
		on (exchanges.ord_num = purchases.ord_num)
		join orders
		on (exchanges.ord_num = orders.ord_num)
		join users
		on (orders.user_id = users.user_id)
		join reasons
		on (exchanges.exc_reason = reasons.rea_code)
	</select>
	
	<select id = "getOrderCancel" parameterType = "string" resultType = "oc">
		select ord_num ordNum
		from order_cancels
		where ord_num = #{ordNum}
	</select>
	 
	<select id = "getPurchase" parameterType="string" resultMap = "purchaseMap">
    	select purchases.ord_num,purchases.god_num,god_amount,god_name,god_sellingprice,god_listimageurl,ord_type,ord_date,users.user_id,user_name,user_phone,sha_postcode,sha_street,sha_detailarea,recipient_name,
		recipient_phone,DELIVERYREQUEST,ord_resultcode,ord_resultcontent,USINGPOINT,PAYMENTMETHOD,memo_content
		from purchases join orders
		on (purchases.ord_num = orders.ord_num)
		join goods
        on (purchases.god_num = goods.god_num)
		join users
		on (orders.user_id = users.user_id)
   		where purchases.ord_num = #{ord_num}
	</select> 
	
	<select id = "getGodo" parameterType = "java.util.Map" resultMap = "godoMap">
		select ord_num,god_num,purchase_option.opt_name,purchase_option.opt_content,opt_price
		from purchase_option
		join item_option
		on (purchase_option.opt_name = item_option.opt_name)
		and (purchase_option.opt_content = item_option.opt_content)
		where ord_num = #{ordNum}
		order by purchase_option.ord_num
	</select>
	
	<select id = "getSm" parameterType = "int" resultType = "sm">
		select pnp_num pnpNum,SAVEPOINTPERCENT savePointPercent
		from point_policies
		where pnp_num = #{pnpNum}
	</select>
	 
	<select id = "getDv" parameterType = "int" resultType = "dv">
		select dvp_num dvpNum,basic_fee basicFee,FREEDELIVERYMP freedeliveryMp
		from delivery_policies
		where dvp_num = #{dvpNum}
	</select>
	
	<select id = "getMlc" parameterType = "string" resultType = "mlc">
		select mlc_date mlcDate,ord_num ordNum,mlc_content mlcContent
		from manage_log_categories
		where ord_num = #{ordNum}
	</select> 
	
	<select id = "getGoods" parameterType = "string" resultType = "god">
		select purchases.god_num godNum,god_name godName,god_sellingprice godSellingPrice,god_amount godAmount
		from purchases join goods
		on (purchases.god_num = goods.god_num)
		where purchases.ord_num = #{ordNum}
	</select>
	 
	<select id = "getRefundImage" parameterType = "string" resultType = "refi">
		select ord_num ordNum,ref_imageurl refundImageUrl
		from refund_images
		where ord_num = #{ordNum}
	</select>
	   
	<select id = "getExchangeImage" parameterType = "string" resultType = "exci">
		select ord_num ordNum,exc_imageurl exchangeImageUrl
		from exchange_images
		where ord_num = #{ordNum}
	</select>
	
	<update id = "addMlc" parameterType = "hashmap">
      insert all
      <foreach item = "tp" collection = "type">
      	<if test = 'tp == "배송준비중"'>
      		<foreach item = "ls" collection = "list">
      		into manage_log_categories
		    values (sysdate,#{ls},'배송준비중으로 변경')     		
      		</foreach>
      	</if>
      	<if test = 'tp == "배송중"'>
      		<foreach item = "ls" collection = "list">
      		into manage_log_categories
		    values (sysdate,#{ls},'배송중으로 변경')     		
      		</foreach>
      	</if>
      	<if test = 'tp == "배송완료"'>
      		<foreach item = "ls" collection = "list">
      		into manage_log_categories
		    values (sysdate,#{ls},'배송완료로 변경')     		
      		</foreach>
      	</if>
      	<if test = 'tp == "주문취소"'>
      		<foreach item = "ls" collection = "list">
      		into manage_log_categories
		    values (sysdate,#{ls},'주문취소로 변경')		
      		</foreach>
      	</if>
      	<if test = 'tp == "처리전"'>
      		<foreach item = "ls" collection = "list">
      		into manage_log_categories
		    values (sysdate,#{ls},'교환/환불 처리전으로 변경')		
      		</foreach>
      	</if>
      	<if test = 'tp == "처리완료"'>
      		<foreach item = "ls" collection = "list">
      		into manage_log_categories
		    values (sysdate,#{ls},'환불/교환 처리완료로 변경')		
      		</foreach>
      	</if>
      </foreach>
     select * from dual
	</update> 
	  
	<update id = "dvModify" parameterType = "hashmap">
		update orders
		<foreach item="tp" collection = "type">
			set ord_type = #{tp}
		</foreach>
		where ord_num in 
		<foreach item = "ls" collection = "list" index = "index" open="(" separator="," close=")">
			#{ls}
		</foreach>
	</update>
	
	<update id = "cancelModify" parameterType = "hashmap">
		update order_cancels
		<foreach item="tp" collection = "type">
			set odc_type = #{tp}
		</foreach>
		where ord_num in 
		<foreach item = "ls" collection = "list" index = "index" open="(" separator="," close=")">
			#{ls}
		</foreach>
	</update> 
	
	<update id = "refundModify" parameterType = "hashmap">
		update refunds
		<foreach item="tp" collection = "type">
			set ref_state = #{tp}
		</foreach>
		where ord_num in 
		<foreach item = "ls" collection = "list" index = "index" open="(" separator="," close=")">
			#{ls}
		</foreach>
	</update>
	 
	<update id = "refundDetailModify" parameterType = "map">
		update refunds
		<if test = 'state == "처리완료"'>
			set ref_completedate = sysdate,ref_state = '처리완료',
		</if>
		<if test = 'state == "처리전"'>
			set ref_completedate = null,ref_state = '처리전',
		</if>
		ref_memo = #{memo},ref_content = #{content}
		where ord_num = #{ordNum}
	</update>
	 
	<update id = "exchangeDetailModify" parameterType = "map">
		update exchanges
		<if test = 'state == "처리완료"'>
			set exc_completedate = sysdate,exc_state = '처리완료',
		</if>
		<if test = 'state == "처리전"'>
			set exc_completedate = null,exc_state = '처리전',
		</if>
		exc_memo = #{memo},exc_content = #{content}
		where ord_num = #{ordNum}
	</update>
	
	<update id = "exchangeModify" parameterType = "hashmap">
		update exchanges
		<foreach item="tp" collection = "type">
			set exc_state = #{tp}
		</foreach>
		where ord_num in 
		<foreach item = "ls" collection = "list" index = "index" open="(" separator="," close=")">
			#{ls}
		</foreach>
	</update>
	 
	<update id = "modifyOrder" parameterType = "map">
		update orders
		set sha_postcode = #{postCode},
			sha_street = #{street},
			sha_detailarea = #{detailArea},
			DELIVERYREQUEST = #{deliveryRequest},
			RECIPIENT_NAME = #{userName},
			RECIPIENT_PHONE = #{phone},
			MEMO_CONTENT = #{memo},
			ord_type = #{ordType}
		where ord_num = #{ordNum}
	</update>
	
	<insert id = "addOrdercancel" parameterType = "string">
		insert into order_cancels
		values (#{ordNum},sysdate,'처리전')
	</insert>
	
	<delete id = "deleteOrdercancel" parameterType = "string">
		delete from order_cancels
		where ord_num = #{ordNum}
	</delete>
	
	<delete id = "deleteRefund" parameterType ="string">
		delete from refunds
		where ord_num = #{ordNum}
	</delete>
	
	<delete id = "deleteExchange" parameterType ="string">
		delete from exchanges
		where ord_num = #{ordNum}
	</delete>
	 
	<delete id = "deleteRefundImage" parameterType ="string">
		delete from refund_images
		where ord_num = #{ordNum}
	</delete>
	
	<delete id = "deleteExchangeImage" parameterType ="string">
		delete from exchange_images
		where ord_num = #{ordNum}
	</delete>
	 
	<resultMap id = "purMap" type = "pur">
		<id property = "ordNum" column = "ord_num" />
		<association property = "order" resultMap = "getOrder" />
		<collection property = "goods" columnPrefix = "god_" resultMap="godMap" />
		<collection property = "goodsOption" column = "ord_num" select = "getGodo" />
	</resultMap>
	
	<resultMap id = "godMap" type = "god">
		<id property = "godNum" column = "num" />
		<result property = "godName" column = "name" />
		<result property = "godAmount" column = "amount" />
		<result property = "godSellingPrice" column = "sellingprice" />
		<result property = 'godListImageUrl' column = "listimageurl" />
	</resultMap> 
	 
	<resultMap id = "getOrder" type = "order">
		<result property = "ordNum" column = "ord_num" />
		<result property = "ordDate" column = "ord_date" />
		<result property = "ordType" column = "ord_type" />
		<result property = "shaPostCode" column = "sha_postcode" />
		<result property = "shaStreet" column = "sha_street" />
		<result property = "shaDetailArea" column = "sha_detailArea" />
		<result property = "recipientName" column = "recipient_name" />
		<result property = "recipientPhone" column = "recipient_phone"/>
		<result property = "deliveryRequest" column = "deliveryRequest" />
		<result property = "ordResultCode" column = "ord_resultcode" />
		<result property = "ordResultContent" column = "ord_resultcontent" />
		<result property = "usingPoint" column = "usingpoint" />
		<result property = "paymentMethod" column = "paymentmethod" />
		<result property = "memoContent" column = "memo_content" />
 		<association property = "user" resultMap="getUser" />
 		<collection property = "mlc" column = "ord_num" select = "getMlc" />
	</resultMap>
	
	<resultMap id = "getUser" type = "user">
		<result property = "userId" column = "user_id" />
		<result property = "userName" column = "user_name" />
		<result property = "userPhone" column = "user_phone" />
	</resultMap>
	
	<resultMap id = "purchaseMap" type = "pur">
		<id property = "ordNum" column = "ord_num" />
		<association property = "order" resultMap = "getOrder" />
		<collection property = "goods" columnPrefix = "god_" resultMap="godMap" />
		<collection property = "goodsOption" column = "ord_num" select = "getGodo" />
	</resultMap>
	 
	<resultMap id = "godoMap" type = "godo">
		<result property = "ordNum" column = "ord_num" />
		<result property = "godNum" column = "god_num" />
		<result property = "optName" column = "opt_name" />
		<result property = "optContent" column = "opt_content" />
		<result property = "optPrice" column = "opt_price" />
	</resultMap>
	  
	<resultMap id = "ocMap" type = "oc">
		<result property = "ordNum" column = "ord_num" />
		<result property = "ordDate" column = "ord_date" />
		<result property = "odcDate" column = "odc_date" />
		<result property = "odcType" column = "odc_type" />
		<result property = "usingPoint" column = "usingpoint" />
		<result property = "paymentMethod" column = "paymentmethod" />
		<association property="user" resultMap = "getUser" />
		<collection property="goods" column="ord_num" select = "getGoods" />
		<collection property="goodsOption" column = "ord_num" select = "getGodo" />
	</resultMap>
	 
	<resultMap id = "refMap" type = "ref">
		<result property = "ordNum" column = "ord_num" />
		<result property = "refRequestDate" column = "ref_requestdate" />
		<result property = "refReason" column = "ref_reason" />
		<result property = "reaName" column = "rea_name" />
		<result property = "refContent" column = "ref_content" />
		<result property = "refState" column = "ref_state" />
		<result property = "refMemo" column = "ref_memo" />
		<result property = "refCompleteDate" column = "ref_completedate" />
		<association property="user" resultMap = "getUser" />
		<collection property="goods" column="ord_num" select = "getGoods" />
		<collection property="goodsOption" column = "{godNum=god_num,ordNum=ord_num}" select = "getGodo" />
		<collection property = "images" column = "ord_num" select = "getRefundImage" />
	</resultMap>
	 
	<resultMap id = "excMap" type = "exc">
		<result property = "ordNum" column = "ord_num" />
		<result property = "excRequestDate" column = "exc_requestdate" />
		<result property = "excReason" column = "exc_reason" />
		<result property = "reaName" column = "rea_name" />
		<result property = "excContent" column = "exc_content" />
		<result property = "excState" column = "exc_state" />
		<result property = "excMemo" column = "exc_memo" />
		<result property = "excCompleteDate" column = "exc_completedate" />
		<association property="user" resultMap = "getUser" />
		<collection property="goods" column="ord_num" select = "getGoods" />
		<collection property="goodsOption" column = "{godNum=god_num,ordNum=ord_num}" select = "getGodo" />
		<collection property = "images" column = "ord_num" select = "getExchangeImage" />
	</resultMap>
	 
</mapper>